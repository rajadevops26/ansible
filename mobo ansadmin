Authenticating with public key "Imported-Openssh-Key: C:\Users\Manoher Raghavendra\Downloads\key_aws.pem"
     ┌────────────────────────────────────────────────────────────────────┐
     │                        • MobaXterm 11.1 •                          │
     │            (SSH client, X-server and networking tools)             │
     │                                                                    │
     │ ➤ SSH session to ec2-user@3.85.127.248                             │
     │   • SSH compression : ✔                                            │
     │   • SSH-browser     : ✔                                            │
     │   • X11-forwarding  : ✘  (disabled or not supported by server)     │
     │   • DISPLAY         : 192.168.0.15:0.0                             │
     │                                                                    │
     │ ➤ For more info, ctrl+click on help or visit our website           │
     └────────────────────────────────────────────────────────────────────┘

Last login: Tue Feb 11 01:28:35 2020 from 183.83.173.87

       __|  __|_  )
       _|  (     /   Amazon Linux 2 AMI
      ___|\___|___|

https://aws.amazon.com/amazon-linux-2/
[ec2-user@ip-172-31-40-78 ~]$ sudo -i
[root@ip-172-31-40-78 ~]# ls -a
.  ..  .ansible  .bash_history  .bash_logout  .bash_profile  .bashrc  .cache  .cshrc  .ssh  .tcshrc
[root@ip-172-31-40-78 ~]# cat .ssh/authorized_keys
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ec2-user\" rather than the user \"root\".';echo;sleep 10" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCg1zxZJqqcz8SKoBokzJL+Z3okgYo3gBTcHvOE0ALbBfzDs3ZbR1V4kn9MnQImJ/YPwgaj/4i/iRr5wW4uF7E0dilTuS8nsBKNjfoFLu1Axjy6eaW0zCeHhRrUfth+u9W+/ke0Z+X0TcMi4uQwZHypYX6GciTAFW5CVcZgnAnyh4Ig1V0FP7YWWUDgvlzfeMtb8ymbAAJqyx0zEVTZB+ls6zm36rsqr2PseJqugWOrKaDmkSCSTpJwDjvf2SlL4V4yiolGvUdlbU4xQFoshqQcgVFey7JFzQryWwYYfk398cxo3SBvefiW3xOsh6DWh8c7Q8hGxrchR9mwcnN/2dT key_aws
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ec2-user\" rather than the user \"root\".';echo;sleep 10" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCGg5BQEWqRGCyLdb+GwDQdO4dRaguZU5qjJrz/73d+ZF11AE1Q36am4VhuffL7DfvaTWd2Wg2j/4H30piKNO3ATPHVt75JkK6aBQQiYA03a2EEU7njLAzFPAn22uL5eEOrQFZJrAgoOy5DCP8rA9QZtxLVav8nKN9BlFXy1zl7kcu6Ygqe1PYM5HiNcu20MtoJHTX1+Z7ANJzO5GRRxjZHP6Iei3SXs3yIcj3zmCLYWw7HbtfUKHxnidldNugu/MZ5k+2B/hMMHP4gauSHdjIsryx9EaiEF2By1oUq3UaPyyfTXuiYhyrllWD6+gPzAAfDEKsnjR8pQhEtURwwNlHn
[root@ip-172-31-40-78 ~]# ansible --version
ansible 2.9.4
  config file = None
  configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python2.7/site-packages/ansible
  executable location = /bin/ansible
  python version = 2.7.16 (default, Dec 12 2019, 23:58:22) [GCC 7.3.1 20180712 (Red Hat 7.3.1-6)]
[root@ip-172-31-40-78 ~]# mkdir /etc/ansible
[root@ip-172-31-40-78 ~]# passwd ansadmin
Changing password for user ansadmin.
New password:
BAD PASSWORD: The password contains the user name in some form
Retype new password:
passwd: all authentication tokens updated successfully.
[root@ip-172-31-40-78 ~]# visudo
[root@ip-172-31-40-78 ~]# cat visudo
cat: visudo: No such file or directory
[root@ip-172-31-40-78 ~]# cat /etc/sudoers
## Sudoers allows particular users to run various commands as
## the root user, without needing the root password.
##
## Examples are provided at the bottom of the file for collections
## of related commands, which can then be delegated out to particular
## users or groups.
##
## This file must be edited with the 'visudo' command.

## Host Aliases
## Groups of machines. You may prefer to use hostnames (perhaps using
## wildcards for entire domains) or IP addresses instead.
# Host_Alias     FILESERVERS = fs1, fs2
# Host_Alias     MAILSERVERS = smtp, smtp2

## User Aliases
## These aren't often necessary, as you can use regular groups
## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname
## rather than USERALIAS
# User_Alias ADMINS = jsmith, mikem


## Command Aliases
## These are groups of related commands...

## Networking
# Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient, /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig, /sbin/mii-tool

## Installation and management of software
# Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum

## Services
# Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig, /usr/bin/systemctl start, /usr/bin/systemctl stop, /usr/bin/systemctl reload, /usr/bin/systemctl restart, /usr/bin/systemctl status, /usr/bin/systemctl enable, /usr/bin/systemctl disable

## Updating the locate database
# Cmnd_Alias LOCATE = /usr/bin/updatedb

## Storage
# Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount

## Delegating permissions
# Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp

## Processes
# Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall

## Drivers
# Cmnd_Alias DRIVERS = /sbin/modprobe

# Defaults specification

#
# Refuse to run if unable to disable echo on the tty.
#
Defaults   !visiblepw

#
# Preserving HOME has security implications since many programs
# use it when searching for configuration files. Note that HOME
# is already set when the the env_reset option is enabled, so
# this option is only effective for configurations where either
# env_reset is disabled or HOME is present in the env_keep list.
#
Defaults    always_set_home
Defaults    match_group_by_gid

# Prior to version 1.8.15, groups listed in sudoers that were not
# found in the system group database were passed to the group
# plugin, if any. Starting with 1.8.15, only groups of the form
# %:group are resolved via the group plugin by default.
# We enable always_query_group_plugin to restore old behavior.
# Disable this option for new behavior.
Defaults    always_query_group_plugin

Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"

#
# Adding HOME to env_keep may enable a user to run unrestricted
# commands via sudo.
#
# Defaults   env_keep += "HOME"

Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin

## Next comes the main part: which users can run what software on
## which machines (the sudoers file can be shared between multiple
## systems).
## Syntax:
##
##      user    MACHINE=COMMANDS
##
## The COMMANDS section may have other options added to it.
##
## Allow root to run any commands anywhere
root    ALL=(ALL)       ALL

## Allows members of the 'sys' group to run networking, software,
## service management apps and more.
# %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS

## Allows people in group wheel to run all commands
%wheel  ALL=(ALL)       ALL

## Same thing without a password
# %wheel        ALL=(ALL)       NOPASSWD: ALL

## Allows members of the users group to mount and unmount the
## cdrom as root
# %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom

## Allows members of the users group to shutdown this system
# %users  localhost=/sbin/shutdown -h now

## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
ansadmin ALL=(ALL)       NOPASSWD: ALL
[root@ip-172-31-40-78 ~]# vi /etc/ssh/sshd_config
[root@ip-172-31-40-78 ~]# cat  /etc/ssh/sshd_config
#       $OpenBSD: sshd_config,v 1.100 2016/08/15 12:32:04 naddy Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

# If you want to change the port on a SELinux system, you have to tell
# SELinux about this change.
# semanage port -a -t ssh_port_t -p tcp #PORTNUMBER
#
#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
SyslogFacility AUTHPRIV
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
#PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile .ssh/authorized_keys

#AuthorizedPrincipalsFile none


# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
#PermitEmptyPasswords no
#PasswordAuthentication no

# Change to no to disable s/key passwords
#ChallengeResponseAuthentication yes
ChallengeResponseAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no
#KerberosUseKuserok yes

# GSSAPI options
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no
#GSSAPIEnablek5users no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
# WARNING: 'UsePAM no' is not supported in Red Hat Enterprise Linux and may cause several
# problems.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
#PrintMotd yes
#PrintLastLog yes
#TCPKeepAlive yes
#UseLogin no
#UsePrivilegeSeparation sandbox
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#ShowPatchLevel no
#UseDNS yes
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Accept locale-related environment variables
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS

# override default of no subsystems
Subsystem sftp  /usr/libexec/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server


AuthorizedKeysCommand /opt/aws/bin/eic_run_authorized_keys %u %f
AuthorizedKeysCommandUser ec2-instance-connect
[root@ip-172-31-40-78 ~]# passwordauthentication yes
-bash: passwordauthentication: command not found
[root@ip-172-31-40-78 ~]# echo "ansadmin ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
[root@ip-172-31-40-78 ~]# cat /etc/sudoers
## Sudoers allows particular users to run various commands as
## the root user, without needing the root password.
##
## Examples are provided at the bottom of the file for collections
## of related commands, which can then be delegated out to particular
## users or groups.
##
## This file must be edited with the 'visudo' command.

## Host Aliases
## Groups of machines. You may prefer to use hostnames (perhaps using
## wildcards for entire domains) or IP addresses instead.
# Host_Alias     FILESERVERS = fs1, fs2
# Host_Alias     MAILSERVERS = smtp, smtp2

## User Aliases
## These aren't often necessary, as you can use regular groups
## (ie, from files, LDAP, NIS, etc) in this file - just use %groupname
## rather than USERALIAS
# User_Alias ADMINS = jsmith, mikem


## Command Aliases
## These are groups of related commands...

## Networking
# Cmnd_Alias NETWORKING = /sbin/route, /sbin/ifconfig, /bin/ping, /sbin/dhclient, /usr/bin/net, /sbin/iptables, /usr/bin/rfcomm, /usr/bin/wvdial, /sbin/iwconfig, /sbin/mii-tool

## Installation and management of software
# Cmnd_Alias SOFTWARE = /bin/rpm, /usr/bin/up2date, /usr/bin/yum

## Services
# Cmnd_Alias SERVICES = /sbin/service, /sbin/chkconfig, /usr/bin/systemctl start, /usr/bin/systemctl stop, /usr/bin/systemctl reload, /usr/bin/systemctl restart, /usr/bin/systemctl status, /usr/bin/systemctl enable, /usr/bin/systemctl disable

## Updating the locate database
# Cmnd_Alias LOCATE = /usr/bin/updatedb

## Storage
# Cmnd_Alias STORAGE = /sbin/fdisk, /sbin/sfdisk, /sbin/parted, /sbin/partprobe, /bin/mount, /bin/umount

## Delegating permissions
# Cmnd_Alias DELEGATING = /usr/sbin/visudo, /bin/chown, /bin/chmod, /bin/chgrp

## Processes
# Cmnd_Alias PROCESSES = /bin/nice, /bin/kill, /usr/bin/kill, /usr/bin/killall

## Drivers
# Cmnd_Alias DRIVERS = /sbin/modprobe

# Defaults specification

#
# Refuse to run if unable to disable echo on the tty.
#
Defaults   !visiblepw

#
# Preserving HOME has security implications since many programs
# use it when searching for configuration files. Note that HOME
# is already set when the the env_reset option is enabled, so
# this option is only effective for configurations where either
# env_reset is disabled or HOME is present in the env_keep list.
#
Defaults    always_set_home
Defaults    match_group_by_gid

# Prior to version 1.8.15, groups listed in sudoers that were not
# found in the system group database were passed to the group
# plugin, if any. Starting with 1.8.15, only groups of the form
# %:group are resolved via the group plugin by default.
# We enable always_query_group_plugin to restore old behavior.
# Disable this option for new behavior.
Defaults    always_query_group_plugin

Defaults    env_reset
Defaults    env_keep =  "COLORS DISPLAY HOSTNAME HISTSIZE KDEDIR LS_COLORS"
Defaults    env_keep += "MAIL PS1 PS2 QTDIR USERNAME LANG LC_ADDRESS LC_CTYPE"
Defaults    env_keep += "LC_COLLATE LC_IDENTIFICATION LC_MEASUREMENT LC_MESSAGES"
Defaults    env_keep += "LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER LC_TELEPHONE"
Defaults    env_keep += "LC_TIME LC_ALL LANGUAGE LINGUAS _XKB_CHARSET XAUTHORITY"

#
# Adding HOME to env_keep may enable a user to run unrestricted
# commands via sudo.
#
# Defaults   env_keep += "HOME"

Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin

## Next comes the main part: which users can run what software on
## which machines (the sudoers file can be shared between multiple
## systems).
## Syntax:
##
##      user    MACHINE=COMMANDS
##
## The COMMANDS section may have other options added to it.
##
## Allow root to run any commands anywhere
root    ALL=(ALL)       ALL

## Allows members of the 'sys' group to run networking, software,
## service management apps and more.
# %sys ALL = NETWORKING, SOFTWARE, SERVICES, STORAGE, DELEGATING, PROCESSES, LOCATE, DRIVERS

## Allows people in group wheel to run all commands
%wheel  ALL=(ALL)       ALL

## Same thing without a password
# %wheel        ALL=(ALL)       NOPASSWD: ALL

## Allows members of the users group to mount and unmount the
## cdrom as root
# %users  ALL=/sbin/mount /mnt/cdrom, /sbin/umount /mnt/cdrom

## Allows members of the users group to shutdown this system
# %users  localhost=/sbin/shutdown -h now

## Read drop-in files from /etc/sudoers.d (the # here does not mean a comment)
#includedir /etc/sudoers.d
ansadmin ALL=(ALL)       NOPASSWD: ALL
ansadmin ALL=(ALL) NOPASSWD: ALL
[root@ip-172-31-40-78 ~]# sed -ie 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config^C
[root@ip-172-31-40-78 ~]#  sudo service sshd reload
Redirecting to /bin/systemctl reload sshd.service
[root@ip-172-31-40-78 ~]# su - ansadmin
[ansadmin@ip-172-31-40-78 ~]$ ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/ansadmin/.ssh/id_rsa):
Created directory '/home/ansadmin/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/ansadmin/.ssh/id_rsa.
Your public key has been saved in /home/ansadmin/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:EbyqLKJPpyKCl2uiD7XPVqef6QyzVWdEpNq283qAk2E ansadmin@ip-172-31-40-78.ec2.internal
The key's randomart image is:
+---[RSA 2048]----+
|       ..  .o    |
|        .. o     |
|        ... .    |
|        E+ .     |
|  .    oS++ o    |
| . .  o =o.+     |
|o oo.ooo..o.     |
|Bo==+ .* o o.    |
|BO=+o .o* .o.    |
+----[SHA256]-----+
[ansadmin@ip-172-31-40-78 ~]$ exit
logout
[root@ip-172-31-40-78 ~]# hostname ansible-controller
[root@ip-172-31-40-78 ~]# sudo su -
[root@ansible-controller ~]# this is temporary
-bash: this: command not found
[root@ansible-controller ~]# vi /etc/hostname
[root@ansible-controller ~]# hostname ansible-controller
[root@ansible-controller ~]# exec bash
[root@ansible-controller ~]# su - ansadmin
Last login: Tue Feb 11 01:42:50 UTC 2020 on pts/0
[ansadmin@ansible-controller ~]$ cd /etc/ansible/
[ansadmin@ansible-controller ansible]$ ls
[ansadmin@ansible-controller ansible]$ vi hosts
[ansadmin@ansible-controller ansible]$ sudo vi hosts
[ansadmin@ansible-controller ansible]$ ansible -m ping localhost
The authenticity of host 'localhost (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:kcpDMZCL3Iwd8BhiyuGYCcnqJIx8OmEJzeeM/ikgQkk.
ECDSA key fingerprint is MD5:7f:20:16:5e:46:d0:42:d2:83:3a:46:f7:a9:a2:17:68.
Are you sure you want to continue connecting (yes/no)? yes
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\r\nPermission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[ansadmin@ansible-controller ansible]$ sudo vi /etc/hosts
[ansadmin@ansible-controller ansible]$ cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost6 localhost6.localdomain6
localhost
[ansadmin@ansible-controller ansible]$ ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[ansadmin@ansible-controller ansible]$ sudo vi hosts
[ansadmin@ansible-controller ansible]$ cat hosts

localhost
[ansadmin@ansible-controller ansible]$ ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[ansadmin@ansible-controller ansible]$ ls -a
.  ..  hosts
[ansadmin@ansible-controller ansible]$ cd
[ansadmin@ansible-controller ~]$ ls
[ansadmin@ansible-controller ~]$ ls -a
.  ..  .ansible  .bash_history  .bash_logout  .bash_profile  .bashrc  .ssh  .viminfo
[ansadmin@ansible-controller ~]$ cd .ssh/
[ansadmin@ansible-controller .ssh]$ ls
id_rsa  id_rsa.pub  known_hosts
[ansadmin@ansible-controller .ssh]$ cd
[ansadmin@ansible-controller ~]$ pwd
/home/ansadmin
[ansadmin@ansible-controller ~]$ cd /root/
-bash: cd: /root/: Permission denied
[ansadmin@ansible-controller ~]$ sudo cd /root/
[ansadmin@ansible-controller ~]$ pwd
/home/ansadmin
[ansadmin@ansible-controller ~]$ exit
logout
[root@ansible-controller ~]# cat .ssh/authorized_keys
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ec2-user\" rather than the user \"root\".';echo;sleep 10" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDCg1zxZJqqcz8SKoBokzJL+Z3okgYo3gBTcHvOE0ALbBfzDs3ZbR1V4kn9MnQImJ/YPwgaj/4i/iRr5wW4uF7E0dilTuS8nsBKNjfoFLu1Axjy6eaW0zCeHhRrUfth+u9W+/ke0Z+X0TcMi4uQwZHypYX6GciTAFW5CVcZgnAnyh4Ig1V0FP7YWWUDgvlzfeMtb8ymbAAJqyx0zEVTZB+ls6zm36rsqr2PseJqugWOrKaDmkSCSTpJwDjvf2SlL4V4yiolGvUdlbU4xQFoshqQcgVFey7JFzQryWwYYfk398cxo3SBvefiW3xOsh6DWh8c7Q8hGxrchR9mwcnN/2dT key_aws
no-port-forwarding,no-agent-forwarding,no-X11-forwarding,command="echo 'Please login as the user \"ec2-user\" rather than the user \"root\".';echo;sleep 10" ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCGg5BQEWqRGCyLdb+GwDQdO4dRaguZU5qjJrz/73d+ZF11AE1Q36am4VhuffL7DfvaTWd2Wg2j/4H30piKNO3ATPHVt75JkK6aBQQiYA03a2EEU7njLAzFPAn22uL5eEOrQFZJrAgoOy5DCP8rA9QZtxLVav8nKN9BlFXy1zl7kcu6Ygqe1PYM5HiNcu20MtoJHTX1+Z7ANJzO5GRRxjZHP6Iei3SXs3yIcj3zmCLYWw7HbtfUKHxnidldNugu/MZ5k+2B/hMMHP4gauSHdjIsryx9EaiEF2By1oUq3UaPyyfTXuiYhyrllWD6+gPzAAfDEKsnjR8pQhEtURwwNlHn
[root@ansible-controller ~]# su - ansadmin
Last login: Tue Feb 11 01:47:55 UTC 2020 on pts/0
[ansadmin@ansible-controller ~]$ cd .ssh/
[ansadmin@ansible-controller .ssh]$ ls
id_rsa  id_rsa.pub  known_hosts
[ansadmin@ansible-controller .ssh]$ cat id_rsa.pub >> authorized_keys
[ansadmin@ansible-controller .ssh]$ ls
authorized_keys  id_rsa  id_rsa.pub  known_hosts
[ansadmin@ansible-controller .ssh]$ ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[ansadmin@ansible-controller .ssh]$ cat id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDs85G9zSdtsHMkCxYwtrVsOrg9JlEnR88dQbNEbw5UtDHBmeFWzWXiC7KAg91ML9ZJp7Bqvdqrywn4ZoFulkCsywKICqL3HnyUKb4QFIrbKjjgLIU2FTjHrOap5SCq1GloUH6QJgaytABxTjbN+C8bJVLfrJ/V4pXhIQ402t0C+koPU5NOtJVb/rwYdQfKgcDWTeXjlO432W0GWn9ZTtmrX9e6xqxVyNNN38gRWd9qSCLS88LHiSdYvzSRi7YnV5SmBdyG3xUulLBXjU6mUM7KVnp03a09wTjKPKxxzIjo4jti3d6LhQq4TLFufwPH5zv0tCXEX+5zIMMwaCNbVn6z ansadmin@ip-172-31-40-78.ec2.internal
[ansadmin@ansible-controller .ssh]$ exit
logout
[root@ansible-controller ~]# cd .ssh/
[root@ansible-controller .ssh]# cat >> authorized_keys
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDs85G9zSdtsHMkCxYwtrVsOrg9JlEnR88dQbNEbw5UtDHBmeFWzWXiC7KAg91ML9ZJp7Bqvdqrywn4ZoFulkCsywKICqL3HnyUKb4QFIrbKjjgLIU2FTjHrOap5SCq1GloUH6QJgaytABxTjbN+C8bJVLfrJ/V4pXhIQ402t0C+koPU5NOtJVb/rwYdQfKgcDWTeXjlO432W0GWn9ZTtmrX9e6xqxVyNNN38gRWd9qSCLS88LHiSdYvzSRi7YnV5SmBdyG3xUulLBXjU6mUM7KVnp03a09wTjKPKxxzIjo4jti3d6LhQq4TLFufwPH5zv0tCXEX+5zIMMwaCNbVn6z ansadmin@ip-172-31-40-78.ec2.internal
[root@ansible-controller .ssh]# su - ansadmin
Last login: Tue Feb 11 01:54:34 UTC 2020 on pts/0
[ansadmin@ansible-controller ~]$ ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[ansadmin@ansible-controller ~]$ chmod 600 .ssh/authorized_keys
[ansadmin@ansible-controller ~]$ ansible -m ping localhost
[WARNING]: Platform linux on host localhost is using the discovered Python interpreter at /usr/bin/python, but future
installation of another Python interpreter could change this. See
https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information.

localhost | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
[ansadmin@ansible-controller ~]$ cd /opt/
[ansadmin@ansible-controller opt]$ ls
aws  rh
[ansadmin@ansible-controller opt]$ cd
[ansadmin@ansible-controller ~]$ cd /opt/
[ansadmin@ansible-controller opt]$ mkdir docker
mkdir: cannot create directory ‘docker’: Permission denied
[ansadmin@ansible-controller opt]$ sudo mkdir docker
[ansadmin@ansible-controller opt]$ ls
aws  docker  rh
[ansadmin@ansible-controller opt]$ cd docker/
[ansadmin@ansible-controller docker]$ ls
[ansadmin@ansible-controller docker]$ sudo vi hosts
[ansadmin@ansible-controller docker]$ sudo vi httpd.yml
[ansadmin@ansible-controller docker]$ ls
hosts  httpd.yml
[ansadmin@ansible-controller docker]$ cat httpd.yml
---
- name: installing httpd
  hosts: localhost
  become: true
  tasks:
  - name: installing httpd package
    yum:
      name: httpd
      state: installed
    notify: start httpd service

  handlers:
  - name: start httpd service
    service:
      name: httpd
      state: started
[ansadmin@ansible-controller docker]$ exit
logout
[root@ansible-controller .ssh]# ansible -m ping localhost
The authenticity of host 'localhost (127.0.0.1)' can't be established.
ECDSA key fingerprint is SHA256:kcpDMZCL3Iwd8BhiyuGYCcnqJIx8OmEJzeeM/ikgQkk.
ECDSA key fingerprint is MD5:7f:20:16:5e:46:d0:42:d2:83:3a:46:f7:a9:a2:17:68.
Are you sure you want to continue connecting (yes/no)? yes
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Warning: Permanently added 'localhost' (ECDSA) to the list of known hosts.\r\nPermission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[root@ansible-controller .ssh]# chmod 600 authorized_keys
[root@ansible-controller .ssh]# ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[root@ansible-controller .ssh]# cd
[root@ansible-controller ~]# ansible -m ping localhost
localhost | UNREACHABLE! => {
    "changed": false,
    "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).",
    "unreachable": true
}
[root@ansible-controller ~]# cd .ssh/
[root@ansible-controller .ssh]# ls
authorized_keys  known_hosts
[root@ansible-controller .ssh]# su - ansadmin
Last login: Tue Feb 11 01:57:41 UTC 2020 from localhost on pts/2
[ansadmin@ansible-controller ~]$ ssh-copy-id root@localhost
/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: "/home/ansadmin/.ssh/id_rsa.pub"
/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed

/usr/bin/ssh-copy-id: WARNING: All keys were skipped because they already exist on the remote system.
                (if you think this is a mistake, you may want to use -f option)

[ansadmin@ansible-controller ~]$ ansible -m ping localhost
[WARNING]: Platform linux on host localhost is using the discovered Python interpreter at /usr/bin/python, but future
installation of another Python interpreter could change this. See
https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information.

localhost | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python"
    },
    "changed": false,
    "ping": "pong"
}
[ansadmin@ansible-controller ~]$ exit
logout
[root@ansible-controller .ssh]# cd
[root@ansible-controller ~]# sudo ansible-playbook -i /opt/docker/hosts /opt/docker/httpd.yml;

PLAY [installing httpd] ********************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************
fatal: [localhost]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}

PLAY RECAP *********************************************************************************************************************
localhost                  : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0

[root@ansible-controller ~]# su - ansadmin
Last login: Tue Feb 11 02:09:22 UTC 2020 from localhost on pts/2
[ansadmin@ansible-controller ~]$ cd /opt/docker/
[ansadmin@ansible-controller docker]$ ls
hosts  httpd.yml
[ansadmin@ansible-controller docker]$ ansible-playbook -i /opt/docker/hosts /opt/docker/httpd.yml --check

PLAY [installing httpd] ********************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************
[WARNING]: Platform linux on host localhost is using the discovered Python interpreter at /usr/bin/python, but future
installation of another Python interpreter could change this. See
https://docs.ansible.com/ansible/2.9/reference_appendices/interpreter_discovery.html for more information.

ok: [localhost]

TASK [installing httpd package] ************************************************************************************************
changed: [localhost]

RUNNING HANDLER [start httpd service] ******************************************************************************************
changed: [localhost]

PLAY RECAP *********************************************************************************************************************
localhost                  : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

[ansadmin@ansible-controller docker]$ ll
total 8
-rw-r--r-- 1 root root  12 Feb 11 02:02 hosts
-rw-r--r-- 1 root root 290 Feb 11 02:03 httpd.yml
[ansadmin@ansible-controller docker]$ chmod 777 httpd.yml
chmod: changing permissions of ‘httpd.yml’: Operation not permitted
[ansadmin@ansible-controller docker]$ sudo chmod 777 httpd.yml
[ansadmin@ansible-controller docker]$ sudo chmod 777 hosts
[ansadmin@ansible-controller docker]$ ll
total 8
-rwxrwxrwx 1 root root  12 Feb 11 02:02 hosts
-rwxrwxrwx 1 root root 290 Feb 11 02:03 httpd.yml
[ansadmin@ansible-controller docker]$ ls
hosts  httpd.yml
[ansadmin@ansible-controller docker]$ exit
logout
[root@ansible-controller ~]# sudo ansible-playbook -i /opt/docker/hosts /opt/docker/httpd.yml;

PLAY [installing httpd] ********************************************************************************************************

TASK [Gathering Facts] *********************************************************************************************************
fatal: [localhost]: UNREACHABLE! => {"changed": false, "msg": "Failed to connect to the host via ssh: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).", "unreachable": true}

PLAY RECAP *********************************************************************************************************************
localhost                  : ok=0    changed=0    unreachable=1    failed=0    skipped=0    rescued=0    ignored=0

[root@ansible-controller ~]#
────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

Session stopped
    - Press <return> to exit tab
    - Press R to restart session
    - Press S to save terminal output to file

Server unexpectedly closed network connection
